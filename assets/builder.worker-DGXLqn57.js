var C=Object.defineProperty;var Q=(h,r,g)=>r in h?C(h,r,{enumerable:!0,configurable:!0,writable:!0,value:g}):h[r]=g;var u=(h,r,g)=>Q(h,typeof r!="symbol"?r+"":r,g);(function(){"use strict";const h=o=>o.split("").reverse().map(t=>t===t.toUpperCase()?t.toLowerCase():t.toUpperCase()).join(""),r=o=>o.toLowerCase(),g=o=>o===o.toUpperCase();class G{constructor(t){u(this,"generators");u(this,"relations");this.generators=t.generators,this.relations=t.relations.map(e=>typeof e=="string"?[e,""]:Array.isArray(e)&&e.length===2?e:(()=>{throw new Error("Bad relation")})())}get relators(){return this.relations.map(([t,e])=>t+h(e))}}const b=o=>Object.fromEntries(o),S=o=>new Map(Object.entries(o));class E{constructor(t,e=[],s){u(this,"G");u(this,"inEdges",new Map);u(this,"outEdges",new Map);u(this,"unfinished");u(this,"mergeQueue",[]);u(this,"subgroupGenerators");if(this.G=t,this.subgroupGenerators=e,s){for(const[i,n]of s.inEdges)this.inEdges.set(i,S(n));for(const[i,n]of s.outEdges)this.outEdges.set(i,S(n));this.unfinished=[...s.unfinished]}else{this.ensure(""),this.unfinished=[""];for(const i in e){let n="";for(const a of i)n=this.define(n,a);this.merge(n,"")}}}step(){if(!this.unfinished.length)return!1;const t=this.unfinished.shift();for(const e of this.G.relators)if(this.scan(t,e),!this.outEdges.has(t))break;if(this.outEdges.has(t))for(const e of this.G.generators)this.outEdges.get(t).has(r(e))||this.unfinished.push(this.define(t,e)),this.inEdges.get(t).has(r(e))||this.unfinished.push(this.define(t,h(e)));return this.unfinished.length>0}run(t=1/0){let e=0;for(;e<t&&this.step();)++e;return this.unfinished.length}exportState(){return{inEdges:[...this.inEdges].map(([t,e])=>[t,b(e)]),outEdges:[...this.outEdges].map(([t,e])=>[t,b(e)]),unfinished:[...this.unfinished]}}static importState(t,e,s){return new E(t,e,s)}ensure(t){this.outEdges.has(t)||(this.outEdges.set(t,new Map),this.inEdges.set(t,new Map))}connect(t,e,s){const i=r(s);this.ensure(t),this.ensure(e),g(s)?(this.inEdges.get(t).set(i,e),this.outEdges.get(e).set(i,t)):(this.outEdges.get(t).set(i,e),this.inEdges.get(e).set(i,t))}define(t,e){const s=t+e;return this.connect(t,s,e),s}follow(t,e){var i,n;const s=r(e);return g(e)?(i=this.inEdges.get(t))==null?void 0:i.get(s):(n=this.outEdges.get(t))==null?void 0:n.get(s)}scan(t,e){let s=t,i=0,n=t,a=e.length-1;for(const d of e){const c=this.follow(s,d);if(c===void 0)break;s=c,++i}if(i===e.length){s!==t&&this.merge(s,t);return}for(const d of h(e.slice(i))){const c=this.follow(n,d);if(c===void 0)break;n=c,--a}if(i>a){this.merge(n,s);return}for(;i<a;){const d=this.define(s,e[i]);this.unfinished.push(d),s=d,++i}this.connect(s,n,e[i])}merge(t,e){for(this.mergeQueue=[[t,e]];this.mergeQueue.length;){const[s,i]=this.mergeQueue.shift(),[n,a]=this.chooseWinner(s,i);this.contract(a,n)}}chooseWinner(t,e){const s=this.outEdges.has(t),i=this.outEdges.has(e);return s&&!i?[t,e]:i&&!s?[e,t]:t.length<e.length?[t,e]:e.length<t.length?[e,t]:[t,e].sort()}contract(t,e){if(!(t===e||!this.outEdges.has(t))){this.ensure(e);for(const[s,i]of this.outEdges.get(t)){this.ensure(i);const n=this.outEdges.get(e).get(s);n&&n!==i&&this.mergeQueue.push([n,i]),this.outEdges.get(e).set(s,i),this.inEdges.get(i).set(s,e)}for(const[s,i]of this.inEdges.get(t)){this.ensure(i);const n=this.inEdges.get(e).get(s);n&&n!==i&&this.mergeQueue.push([n,i]),this.inEdges.get(e).set(s,i),this.outEdges.get(i).set(s,e)}this.outEdges.delete(t),this.inEdges.delete(t),this.unfinished=this.unfinished.filter(s=>s!==t)}}}let f=null,l=null,j=0;const v=10,x=100;let m=0;function M(o,t){return new G({generators:o,relations:t})}function w(o){self.postMessage(o)}function k(o){w({workerState:o})}function y(){if(!f)return;let o=0;for(;o<v&&f.step();)o++;const t=performance.now(),e=f.exportState(),s=f.unfinished.length===0,i=!s&&f.outEdges.size>=j;(s||i||t-m>x)&&(w({state:e,completed:s,paused:i,err:null}),m=t),(s||i)&&p("idle")}function p(o="idle"){l!==null&&(clearInterval(l),l=null),k(o)}self.addEventListener("message",o=>{const t=o.data;if(t.action==="stop"){p("idle"),f=null;return}try{const e=M(t.generators,t.relations);f=new E(e,t.subgroupGenerators,t.savedState),j+=t.nodeLimit||100,m=performance.now(),p("running"),l=setInterval(y,0)}catch(e){w({state:t.savedState,completed:!1,paused:!1,err:e}),p("idle")}})})();
